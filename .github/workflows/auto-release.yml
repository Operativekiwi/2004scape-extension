name: Auto Release for zipped .crx File

on:
  push:
    paths:
      - "*.crx"  # Trigger only when .crx files are updated

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Zip the .crx file
      run: |
        crx_file=$(ls *.crx | head -n 1)  # Find the first .crx file
        zip extension.zip "$crx_file"      # Create a zip file named extension.zip
        ls -l                              # List files for debugging

    - name: Create a release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: "v${{ github.run_number }}"
        release_name: "Auto Release v${{ github.run_number }}"
        body: Auto-generated release with the latest .crx file.
        draft: false
        prerelease: false
        commitish: ${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Explicitly passing the GitHub token

    - name: Upload the zipped .crx file
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./extension.zip"
        asset_name: "extension.zip"
        asset_content_type: "application/zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Explicitly passing the GitHub token

    - name: Update README.md with latest release URL
      run: |
        # Extract the tag for the current release (e.g., v153)
        TAG="${{ github.run_number }}"
        ZIP_URL="https://github.com/Operativekiwi/2004scape-extension/releases/download/v${TAG}/extension.zip"

        # Use sed or a similar tool to update the README
        sed -i "s|https://github.com/Operativekiwi/2004scape-extension/releases/download/v[0-9]*|$ZIP_URL|g" README.md

        # Ensure the files are in a clean state before pushing
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

        # Check if there's a change in README.md before adding and committing
        git add README.md

        # Check if there's a commit to push
        git diff --cached --quiet || (git commit -m "Update README.md with latest .zip download link" && git push origin main)
        
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Explicitly passing the GitHub token
