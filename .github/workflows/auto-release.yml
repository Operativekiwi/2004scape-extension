name: Auto Release for Extension Files

on:
  push:
    paths:
      - "content_script.js"
      - "background.js"
      - "manifest.json"
      - "style.css"
      - "icons/**"
      - "plugins/**/*.js"
      - "plugins/**/*.json"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Prepare Chrome extension
      run: |
        cp manifest.json manifest.chrome.json
        zip -r chrome-extension.zip content_script.js background.js manifest.json style.css icons/ plugins/
        ls -l

    - name: Prepare Firefox extension
      run: |
        # Update manifest for Firefox
        jq '.browser_specific_settings = {gecko: {id: "2004scape-tools@developer.mozilla.org", strict_min_version: "91.0"}}' manifest.json > manifest.firefox.json
        mv manifest.firefox.json manifest.json
        zip -r firefox-extension.zip content_script.js background.js manifest.json style.css icons/ plugins/
        ls -l

    - name: Create a release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: "v${{ github.run_number }}"
        release_name: "Auto Release v${{ github.run_number }}"
        body: Auto-generated release with the latest extension files.
        draft: false
        prerelease: false
        commitish: ${{ github.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Chrome extension
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./chrome-extension.zip"
        asset_name: "chrome-extension.zip"
        asset_content_type: "application/zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Firefox extension
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./firefox-extension.zip"
        asset_name: "firefox-extension.zip"
        asset_content_type: "application/zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # âœ… NEW STEP: Send Discord Notification
    - name: Send Discord Notification
      run: |
        curl -H "Content-Type: application/json" -X POST -d '{
          "content": "ðŸ“¢ **New Auto Release Created!**",
          "embeds": [{
            "title": "Release: Auto Release v${{ github.run_number }}",
            "description": "New release created from latest commits.",
            "url": "${{ steps.create_release.outputs.html_url }}",
            "color": 5814783,
            "fields": [
              {
                "name": "Commit Message",
                "value": "${{ github.event.head_commit.message }}",
                "inline": false
              }
            ]
          }]
        }' ${{ secrets.DISCORD_WEBHOOK_URL }}